/*
 * Description:    Class_D_Board:SSM3582_1 program data.
 *
 * Copyright (c) 2017 Analog Devices, Inc. All rights reserved.
 */
#ifndef __CLASS_D_BOARD_SSM3582_1_H__
#define __CLASS_D_BOARD_SSM3582_1_H__

#include <drivers/bm_adau_driver/configurations/ss_schematics/Class_D_Fin/Exported_init_files/Class_D_Board_SSM3582_1_REG.h>

#include "SigmaStudioFW.h"

#define DEVICE_ARCHITECTURE_SSM3582_1             "SSM3582"
#define DEVICE_ADDR_SSM3582_1                     0x20


/* Register Default - SSM3582_1.POWER_CTRL Register.POWER_CTRL */
ADI_REG_TYPE R0_POWER_CTRL_SSM3582_1_Default[REG_POWER_CTRL_SSM3582_1_BYTE] = {
0x80
};

/* Register Default - SSM3582_1.AMP_DAC_CTRL Register.AMP_DAC_CTRL */
ADI_REG_TYPE R1_AMP_DAC_CTRL_SSM3582_1_Default[REG_AMP_DAC_CTRL_SSM3582_1_BYTE] = {
0x8A
};

/* Register Default - SSM3582_1.DAC_CTRL Register.DAC_CTRL */
ADI_REG_TYPE R2_DAC_CTRL_SSM3582_1_Default[REG_DAC_CTRL_SSM3582_1_BYTE] = {
0x02
};

/* Register Default - SSM3582_1.VOL_LEFT_CTRL Register.VOL_LEFT_CTRL */
ADI_REG_TYPE R3_VOL_LEFT_CTRL_SSM3582_1_Default[REG_VOL_LEFT_CTRL_SSM3582_1_BYTE] = {
0x40
};

/* Register Default - SSM3582_1.VOL_RIGHT_CTRL Register.VOL_RIGHT_CTRL */
ADI_REG_TYPE R4_VOL_RIGHT_CTRL_SSM3582_1_Default[REG_VOL_RIGHT_CTRL_SSM3582_1_BYTE] = {
0x40
};

/* Register Default - SSM3582_1.SAI_CTRL1 Register.SAI_CTRL1 */
ADI_REG_TYPE R5_SAI_CTRL1_SSM3582_1_Default[REG_SAI_CTRL1_SSM3582_1_BYTE] = {
0x10
};

/* Register Default - SSM3582_1.SAI_CTRL2 Register.SAI_CTRL2 */
ADI_REG_TYPE R6_SAI_CTRL2_SSM3582_1_Default[REG_SAI_CTRL2_SSM3582_1_BYTE] = {
0x07
};

/* Register Default - SSM3582_1.SLOT_LEFT_CTRL Register.SLOT_LEFT_CTRL */
ADI_REG_TYPE R7_SLOT_LEFT_CTRL_SSM3582_1_Default[REG_SLOT_LEFT_CTRL_SSM3582_1_BYTE] = {
0x00
};

/* Register Default - SSM3582_1.SLOT_RIGHT_CTRL Register.SLOT_RIGHT_CTRL */
ADI_REG_TYPE R8_SLOT_RIGHT_CTRL_SSM3582_1_Default[REG_SLOT_RIGHT_CTRL_SSM3582_1_BYTE] = {
0x01
};

/* Register Default - SSM3582_1.LIM_LEFT_CTRL1 Register.LIM_LEFT_CTRL1 */
ADI_REG_TYPE R9_LIM_LEFT_CTRL1_SSM3582_1_Default[REG_LIM_LEFT_CTRL1_SSM3582_1_BYTE] = {
0xA0
};

/* Register Default - SSM3582_1.LIM_LEFT_CTRL2 Register.LIM_LEFT_CTRL2 */
ADI_REG_TYPE R10_LIM_LEFT_CTRL2_SSM3582_1_Default[REG_LIM_LEFT_CTRL2_SSM3582_1_BYTE] = {
0x51
};

/* Register Default - SSM3582_1.LIM_LEFT_CTRL3 Register.LIM_LEFT_CTRL3 */
ADI_REG_TYPE R11_LIM_LEFT_CTRL3_SSM3582_1_Default[REG_LIM_LEFT_CTRL3_SSM3582_1_BYTE] = {
0x22
};

/* Register Default - SSM3582_1.LIM_RIGHT_CTRL1 Register.LIM_RIGHT_CTRL1 */
ADI_REG_TYPE R12_LIM_RIGHT_CTRL1_SSM3582_1_Default[REG_LIM_RIGHT_CTRL1_SSM3582_1_BYTE] = {
0xA8
};

/* Register Default - SSM3582_1.LIM_RIGHT_CTRL2 Register.LIM_RIGHT_CTRL2 */
ADI_REG_TYPE R13_LIM_RIGHT_CTRL2_SSM3582_1_Default[REG_LIM_RIGHT_CTRL2_SSM3582_1_BYTE] = {
0x51
};

/* Register Default - SSM3582_1.LIM_RIGHT_CTRL3 Register.LIM_RIGHT_CTRL3 */
ADI_REG_TYPE R14_LIM_RIGHT_CTRL3_SSM3582_1_Default[REG_LIM_RIGHT_CTRL3_SSM3582_1_BYTE] = {
0x22
};

/* Register Default - SSM3582_1.CLIP_LEFT_CTRL Register.CLIP_LEFT_CTRL */
ADI_REG_TYPE R15_CLIP_LEFT_CTRL_SSM3582_1_Default[REG_CLIP_LEFT_CTRL_SSM3582_1_BYTE] = {
0xFF
};

/* Register Default - SSM3582_1.CLIP_RIGHT_CTRL Register.CLIP_RIGHT_CTRL */
ADI_REG_TYPE R16_CLIP_RIGHT_CTRL_SSM3582_1_Default[REG_CLIP_RIGHT_CTRL_SSM3582_1_BYTE] = {
0xFF
};

/* Register Default - SSM3582_1.FAULT_CTRL1 Register.FAULT_CTRL1 */
ADI_REG_TYPE R17_FAULT_CTRL1_SSM3582_1_Default[REG_FAULT_CTRL1_SSM3582_1_BYTE] = {
0x00
};

/* Register Default - SSM3582_1.FAULT_CTRL2 Register.FAULT_CTRL2 */
ADI_REG_TYPE R18_FAULT_CTRL2_SSM3582_1_Default[REG_FAULT_CTRL2_SSM3582_1_BYTE] = {
0x30
};

/* Register Default - SSM3582_1.SOFT_RESET Register.SOFT_RESET */
ADI_REG_TYPE R19_SOFT_RESET_SSM3582_1_Default[REG_SOFT_RESET_SSM3582_1_BYTE] = {
0x00
};


/*
 * Default Download
 */
#define DEFAULT_DOWNLOAD_SIZE_SSM3582_1 20

void default_download_SSM3582_1() {
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_POWER_CTRL_SSM3582_1_ADDR, REG_POWER_CTRL_SSM3582_1_BYTE, R0_POWER_CTRL_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_AMP_DAC_CTRL_SSM3582_1_ADDR, REG_AMP_DAC_CTRL_SSM3582_1_BYTE, R1_AMP_DAC_CTRL_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_DAC_CTRL_SSM3582_1_ADDR, REG_DAC_CTRL_SSM3582_1_BYTE, R2_DAC_CTRL_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_VOL_LEFT_CTRL_SSM3582_1_ADDR, REG_VOL_LEFT_CTRL_SSM3582_1_BYTE, R3_VOL_LEFT_CTRL_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_VOL_RIGHT_CTRL_SSM3582_1_ADDR, REG_VOL_RIGHT_CTRL_SSM3582_1_BYTE, R4_VOL_RIGHT_CTRL_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_SAI_CTRL1_SSM3582_1_ADDR, REG_SAI_CTRL1_SSM3582_1_BYTE, R5_SAI_CTRL1_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_SAI_CTRL2_SSM3582_1_ADDR, REG_SAI_CTRL2_SSM3582_1_BYTE, R6_SAI_CTRL2_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_SLOT_LEFT_CTRL_SSM3582_1_ADDR, REG_SLOT_LEFT_CTRL_SSM3582_1_BYTE, R7_SLOT_LEFT_CTRL_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_SLOT_RIGHT_CTRL_SSM3582_1_ADDR, REG_SLOT_RIGHT_CTRL_SSM3582_1_BYTE, R8_SLOT_RIGHT_CTRL_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_LIM_LEFT_CTRL1_SSM3582_1_ADDR, REG_LIM_LEFT_CTRL1_SSM3582_1_BYTE, R9_LIM_LEFT_CTRL1_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_LIM_LEFT_CTRL2_SSM3582_1_ADDR, REG_LIM_LEFT_CTRL2_SSM3582_1_BYTE, R10_LIM_LEFT_CTRL2_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_LIM_LEFT_CTRL3_SSM3582_1_ADDR, REG_LIM_LEFT_CTRL3_SSM3582_1_BYTE, R11_LIM_LEFT_CTRL3_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_LIM_RIGHT_CTRL1_SSM3582_1_ADDR, REG_LIM_RIGHT_CTRL1_SSM3582_1_BYTE, R12_LIM_RIGHT_CTRL1_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_LIM_RIGHT_CTRL2_SSM3582_1_ADDR, REG_LIM_RIGHT_CTRL2_SSM3582_1_BYTE, R13_LIM_RIGHT_CTRL2_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_LIM_RIGHT_CTRL3_SSM3582_1_ADDR, REG_LIM_RIGHT_CTRL3_SSM3582_1_BYTE, R14_LIM_RIGHT_CTRL3_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_CLIP_LEFT_CTRL_SSM3582_1_ADDR, REG_CLIP_LEFT_CTRL_SSM3582_1_BYTE, R15_CLIP_LEFT_CTRL_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_CLIP_RIGHT_CTRL_SSM3582_1_ADDR, REG_CLIP_RIGHT_CTRL_SSM3582_1_BYTE, R16_CLIP_RIGHT_CTRL_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_FAULT_CTRL1_SSM3582_1_ADDR, REG_FAULT_CTRL1_SSM3582_1_BYTE, R17_FAULT_CTRL1_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_FAULT_CTRL2_SSM3582_1_ADDR, REG_FAULT_CTRL2_SSM3582_1_BYTE, R18_FAULT_CTRL2_SSM3582_1_Default );
	SIGMA_WRITE_REGISTER_BLOCK( DEVICE_ADDR_SSM3582_1, REG_SOFT_RESET_SSM3582_1_ADDR, REG_SOFT_RESET_SSM3582_1_BYTE, R19_SOFT_RESET_SSM3582_1_Default );
}

#endif
